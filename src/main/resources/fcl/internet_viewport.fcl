FUNCTION_BLOCK internet_viewport_fls 

VAR_INPUT
    internet_performance : REAL;  // escala de 0 a 10
    viewport_size : REAL;         // altura en píxeles (0 a 1080)
END_VAR

VAR_OUTPUT
    video_resolution : REAL;      // escala de 0 a 1080 (resolución vertical)
END_VAR

FUZZIFY internet_performance
    TERM bajo := (0, 1) (1.5, 1) (3.33, 0);
    TERM medio := (1.5, 0) (3.3, 1) (5, 1) (6.5, 0);
    TERM alto := (5, 0) (7.5, 1) (10, 1);
END_FUZZIFY

FUZZIFY viewport_size
    TERM bajo := (0, 1) (360, 1) (480, 0);
    TERM medio := (360, 0) (480, 1) (720, 0);
    TERM alto := (480, 0) (720, 1) (1200, 1);
END_FUZZIFY

DEFUZZIFY video_resolution
    TERM muy_baja := 240; 
    TERM baja := 360;
	TERM media := 480;
    TERM alta := 720;
    TERM muy_alta := 1080;
    METHOD : COGS;
    DEFAULT := 360;
END_DEFUZZIFY

RULEBLOCK No1
    AND : MIN;
    ACT : MIN;
    ACCU : MAX;

    RULE 1 : IF internet_performance IS bajo AND viewport_size IS bajo THEN video_resolution IS muy_baja;
    RULE 2 : IF internet_performance IS bajo AND viewport_size IS medio THEN video_resolution IS muy_baja;
    RULE 3 : IF internet_performance IS bajo AND viewport_size IS alto THEN video_resolution IS baja;

    RULE 4 : IF internet_performance IS medio AND viewport_size IS bajo THEN video_resolution IS baja;
    RULE 5 : IF internet_performance IS medio AND viewport_size IS medio THEN video_resolution IS media;
    RULE 6 : IF internet_performance IS medio AND viewport_size IS alto THEN video_resolution IS media;

    RULE 7 : IF internet_performance IS alto AND viewport_size IS bajo THEN video_resolution IS media;
    RULE 8 : IF internet_performance IS alto AND viewport_size IS medio THEN video_resolution IS alta;
    RULE 9 : IF internet_performance IS alto AND viewport_size IS alto THEN video_resolution IS muy_alta;
END_RULEBLOCK

END_FUNCTION_BLOCK
